// Assignment #: Arizona State University CSE205 #6
//         Name: Megan McElenney
//    StudentID: 1214828277
//      Lecture: TTh 4:30
//  Description: PurchasePane displays a list of available laptops
//  from which a user can select to buy. It also shows how many
//  laptops are selected and what is the total amount.

//imports
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.TextAlignment;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;	//**Need to import to handle event
import javafx.event.EventHandler;	//**Need to import to handle event
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.*;
import javafx.scene.layout.*;

import java.util.ArrayList;

//import InputPane.ButtonHandler;


//import all other necessary javafx classes
//----

public class PurchasePane extends VBox
{
   //GUI components
   private ArrayList<Laptop> laptopList, selectedList;

   //laptopLV for top ListView; selectedLV for bottom ListView
   private ListView<Laptop> laptopLV, selectedLV;

   //declare all other necessary GUI variables here
   //----
   private Label aval;
   private Button pick;
   private Button remove;
   private Label sel;
   private Label quan;
   private Label tot;
   private int count = 0;
   private double sum = 0;
   private boolean works = true;
   
   //observable lists
   private ObservableList <Laptop> ava;
   private ObservableList <Laptop> selly;

 //constructor
   public PurchasePane(ArrayList<Laptop> list)
   {
   	  //initialize instance variables
      this.laptopList = list;
      selectedList = new ArrayList<Laptop>();
      //creates labels, boxes, and buttons for top half
      aval = new Label("Available Laptops");
      laptopLV = new ListView<Laptop>();
      pick = new Button("Pick a Laptop");
      remove = new Button("Remove a Laptop");
      //creates labels, boxes, and buttons for bottom half
      sel = new Label("Selected Laptops");
      selectedLV = new ListView<Laptop>();
      quan = new Label("Qty Selected: ??\t");
      tot = new Label("Total Amt: ??");
      
      ava = FXCollections.observableArrayList();
      selly = FXCollections.observableArrayList();
      

      //set up the layout
      //----
      //HBox allows the items to be on the same line
      HBox butts = new HBox();
      butts.getChildren().addAll(pick, remove);
      butts.setAlignment(Pos.CENTER);
 
      HBox labs = new HBox();
      labs.getChildren().addAll(quan, tot);
      labs.setAlignment(Pos.CENTER);
      //sets colors
      aval.setTextFill(Color.BLUE);
      sel.setTextFill(Color.BLUE);
      //centers text
      quan.setTextAlignment(TextAlignment.CENTER);
      tot.setTextAlignment(TextAlignment.CENTER);


   	 //PurchasePane is a VBox - add the components here
   	 //----
      VBox all =new VBox();
      all.getChildren().addAll(aval, laptopLV, butts, sel, selectedLV, labs);//adds everything to the pane
      all.setPadding(new Insets(10, 0, 10, 0));

	  //Step #3: Register the button with its handler class
	  //----
      this.getChildren().addAll(all);
      pick.setOnAction(new ButtonHandler2());
      remove.setOnAction(new ButtonHandler2());

      

   } //end of constructor

 //This method refresh the ListView whenever there's new laptop added in InputPane
 //you will need to update the underline ObservableList object in order for ListView
 //object to show the updated laptop list
 public void updateLaptopList(Laptop newLoptop)
 {
	 //takes input from inputPane and adds it to observable list
     ava.add(newLoptop);
     laptopLV.setItems(ava);
 }

//Step #2: Create a ButtonHandler class
 private class ButtonHandler2 implements EventHandler<ActionEvent>
 {
  	//Override the abstract method handle()
	@Override
    public void handle(ActionEvent e)
    {
		//When "Pick a Laptop" button is pressed and a laptop is selected from
		//the top list
        if (e.getSource() == pick && laptopLV.getSelectionModel().getSelectedIndex() != -1)
        {
        	//selected item
        	Laptop select = laptopLV.getSelectionModel().getSelectedItem();
        	for(int y= 0; y < selectedList.size(); y++)
        	{
        		//checks for repeats
        		if(selly.get(y).getBrand().equals(select.getBrand()) && selly.get(y).getModel().equals(select.getModel()))
				{
					if(selly.get(y).getCPU() == select.getCPU() && selly.get(y).getRAM() == select.getRAM())
					{
						works = false;
					}
				}
        	}
        	if(works)
        	{
				selly.add(select);
				selectedLV.setItems(selly);
				count++;
				sum = sum + select.getPrice();
        	}

			
        }
        //when "Remove a Laptop" button is pushed and a laptop is selected from
        //the bottom list
        else if (e.getSource() == remove && selectedLV.getSelectionModel().getSelectedIndex() != -1)
         {
        	 Laptop selects = selectedLV.getSelectionModel().getSelectedItem();
        	 selly.remove(selects);
			 selectedLV.setItems(selly);
        	 count--;
 			 sum = sum - selects.getPrice();
         }
      	 //update the QtySelect and AmtSelect labels
      	 //----
        quan.setText("Qty Selected: " + count + "\t");
        tot.setText("Total Amt: " + sum);
	             
       }
   } //end of ButtonHandler class
} //end of PurchasePane class
