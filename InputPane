// Assignment #: Arizona State University CSE205 #6
//         Name: Megan McElenney
//    StudentID: 1214828277
//      Lecture: TTh 4:30
//  Description: InputPane generates a pane where a user can enter
//  a laptop information and create a list of available laptops.

import java.util.ArrayList;

import javafx.geometry.Insets;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.paint.Color;


//import all other necessary javafx classes here
//----
import javafx.event.ActionEvent;
import javafx.event.EventHandler;

public class InputPane extends HBox
{
	//GUI components
   private ArrayList<Laptop> laptopList;

   //The relationship between InputPane and PurchasePane is Aggregation
  private PurchasePane purchasePane;
   //----

   private GridPane gp;
   private GridPane pn;
   private TextArea right;
   //labels
   private Label brand;
   private Label model;
   private Label cpu;
   private Label ram;
   private Label price;
   private Label nope;
   private Label dupe;
   private Label form;
   private Label good;
   //textfields
   private TextField tfield1;
   private TextField tfield2;
   private TextField tfield3;
   private TextField tfield4;
   private TextField tfield5;
   //button
   private Button button1;
   private String prnt = "";
   
	//constructor
	public InputPane(ArrayList<Laptop> list, PurchasePane pPane)
	{
		this.laptopList = list;
		this.purchasePane = pPane;

		//Step #1: initialize each instance variable and set up the layout
		//----
		brand = new Label("Brand");
		model = new Label("Model");
		cpu = new Label("CPU(GHz)");
		ram = new Label("RAM(GB)");
		price = new Label("Price($)");
		nope = new Label("");
		dupe = new Label("");
		form = new Label("");
		good = new Label("");
		
		tfield1 = new TextField();
		tfield2 = new TextField();
		tfield3 = new TextField();
		tfield4 = new TextField();
		tfield5 = new TextField();
		
		button1 = new Button("Enter Laptop Info.");
		

		//create a GridPane hold those labels & text fields
		//consider using .setPadding() or setHgap(), setVgap()
		//to control the spacing and gap, etc.
		//----
		//formats grid pane
		gp = new GridPane();
		gp.add(nope, 0, 0);
		gp.add(dupe, 0, 0);
		gp.add(form, 0, 0);
		gp.add(good, 0, 0);
		gp.add(brand,0, 1);
		gp.add(tfield1, 1, 1);
		gp.add(model, 0, 2);
		gp.add(tfield2, 1, 2);
		gp.add(cpu, 0, 3);
		gp.add(tfield3, 1, 3);
		gp.add(ram, 0, 4);
		gp.add(tfield4, 1, 4);
		gp.add(price, 0, 5);
		gp.add(tfield5, 1, 5);
		gp.add(button1, 1, 7);
		gp.setPadding(new Insets(30, 30, 30, 30));
		gp.setHgap(10.0);
		gp.setVgap(10.0);
		


		//You might need to create a sub pane to hold the button
   		//----


   		//Set up the layout for the left half of the InputPane.
   		//----


   		//the right half of the InputPane is simply a TextArea object
   		//Note: a ScrollPane will be added to it automatically when there are no
   		//enough space
		
		//sets right side up
		pn = new GridPane();
		pn.setHgap(10.0);
		pn.setVgap(10.0);
		right = new TextArea();
		right.setPromptText("No Laptops");
		right.setPrefColumnCount(20);
		right.setPrefRowCount(50);
		pn.add(right, 0, 0);
		right.setText(prnt);

		

   		//Add the left half and right half to the InputPane
   		//Note: InputPane extends from HBox
   		//----
		this.getChildren().addAll(gp, pn);

 	  //Step #3: register source object with event handler
 	  //---
		button1.setOnAction(new ButtonHandler());


	} //end of constructor

  //Step #2: Create a ButtonHandler class
  //ButtonHandler listens to see if the button "Enter a Laptop Info." is pushed or not,
  //When the event occurs, it get a laptop's brand, model, CPU, RAM and price
  //information from the relevant text fields, then create a new Laptop object and add it inside
  //the laptopList. Meanwhile it will display the laptop's information inside the text area.
  //It also does error checking in case any of the textfields are empty or wrong data was entered.
     private class ButtonHandler implements EventHandler<ActionEvent>
   	 {
   	    //Override the abstract method handle()
    	 @Override
   	    public void handle(ActionEvent e)
        {
    		 //hides labels when they aren't relevant
   	    	nope.setVisible(false);
   	    	dupe.setVisible(false);
   	    	form.setVisible(false);
   	    	good.setVisible(false);
			//declare any necessary local variables here
			//---
   	    	
   	    	String brnd = tfield1.getText();
			String mdl = tfield2.getText();
			String cp = tfield3.getText();
			String rm = tfield4.getText();
			String prc = tfield5.getText();

			//when a text field is empty and the button is pushed
			if (tfield1.getText().isEmpty() || tfield2.getText().isEmpty() || tfield3.getText().isEmpty() || 
					tfield4.getText().isEmpty() || tfield5.getText().isEmpty())
			{
				nope.setText("Please fill all fields");
				nope.setTextFill(Color.RED);
				nope.setVisible(true);
			}
			else	//for all other cases
         	{
				try
				{ 
					Laptop lap = new Laptop(brnd, mdl, Double.parseDouble(cp), Double.parseDouble(rm), Double.parseDouble(prc));
					laptopList.add(lap);
					for(int i = 0; i < laptopList.size()-1; i++)
					{
						//checks for duplicates
						if(laptopList.get(i).getBrand().equals(brnd) && laptopList.get(i).getModel().equals(mdl))
						{
							if(laptopList.get(i).getCPU() == Double.parseDouble(cp) && laptopList.get(i).getRAM() == Double.parseDouble(rm))
							{
								dupe.setText("Laptop not added - duplicate");
								dupe.setTextFill(Color.RED);
								dupe.setVisible(true);
							}
						}
					}
					for(int l = 0; l < laptopList.size(); l++)
					{
						tfield1.setText("");
						tfield2.setText("");
						tfield3.setText("");
						tfield4.setText("");
						tfield5.setText("");
					}
					prnt = prnt + lap.toString();
					right.setText(prnt);
					good.setText("Laptop Added");
					good.setVisible(true);
					purchasePane.updateLaptopList(lap);
				}
				catch(NumberFormatException a)
				{
					form.setText("Incorrect data format");
					form.setTextFill(Color.RED);
					form.setVisible(true);
				}
				//----
				//at the end, don't forget to update the new arrayList
				//information on the ListView of the Purchase Pane
                //----
				
                //Also somewhere you will need to use try & catch block to catch
                //the NumberFormatException
            }
      } //end of handle() method
   } //end of ButtonHandler class

}
